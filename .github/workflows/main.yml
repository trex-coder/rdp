name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y curl unzip python3 python3-pip jq \
          x11vnc xvfb firefox plasma-desktop sddm kde-spectacle \
          nodejs npm git net-tools

    - name: Install noVNC
      run: |
        git clone https://github.com/trex-coder/Novnc.git
        cd Novnc
        git clone https://github.com/novnc/websockify.git
        npm install

    - name: Start KDE Plasma in Xvfb
      run: |
        export DISPLAY=:1
        Xvfb :1 -screen 0 1280x720x16 &
        sleep 2
        startplasma-x11 &

    - name: Start x11vnc
      run: |
        export DISPLAY=:1
        x11vnc -display :1 -nopw -forever -shared -rfbport 5900 &

    - name: Start noVNC
      run: |
        cd Novnc
        ./utils/novnc_proxy --vnc localhost:5900 --listen 6901 &

    - name: Download and start ngrok
      run: |
        curl -s https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip -o ngrok.zip
        unzip ngrok.zip
        ./ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
        nohup ./ngrok http 6901 > ngrok.log &
        sleep 10

    - name: Get Ngrok public URL
      id: ngrok
      run: |
        URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "NGROK_URL=$URL"
        echo "NGROK_URL=$URL" >> $GITHUB_ENV

    - name: Upload noVNC URL to Firebase
      env:
        FIREBASE_KEY: ${{ secrets.FIREBASE_CREDENTIALS_JSON }}
        NGROK_URL: ${{ env.NGROK_URL }}
        UID: ${{ github.actor }}
      run: |
        echo "$FIREBASE_KEY" > creds.json
        pip install firebase-admin
        python3 upload_url.py

    - name: Loop output of URL
      run: |
        while true; do
          echo "Access URL: ${{ env.NGROK_URL }}"
          sleep 10
        done

  cleanup:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ cancelled() }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python and credentials
      env:
        FIREBASE_KEY: ${{ secrets.FIREBASE_CREDENTIALS_JSON }}
      run: |
        echo "$FIREBASE_KEY" > creds.json
        pip install firebase-admin

    - name: Set deploy_status to 0 on cancel
      env:
        UID: ${{ github.actor }}
      run: python3 cancel_cleanup.py
